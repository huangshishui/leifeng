<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.app.dao.task.TaskDao">

    <sql id="taskDtoField">
            t.*,
            a.id AS address_id,
            a.province AS address_province,
            a.city AS address_city,
            a.district AS address_district,
            a.street AS address_street,
            a.detail AS address_detail,
            m.id AS creator_id,
            m.nick_name AS creator_nick_name,
            m.real_name AS creator_real_name,
            m.avatar AS creator_avatar,
            m.sex AS creator_sex,
            ri.image_url,
            tg.name AS tag_name
    </sql>

    <sql id="searchTaskCondition">
        <if test="keyword !=null and keyword != ''">
            AND t.title like concat('%',#{keyword},'%)'
        </if>
        <if test="difficulty!=null and difficulty != ''">
            <choose>
                <when test="difficulty =='FREE'">
                    AND t.virtual_currency = #{maxVirtualCurrency}
                </when>
                <when test="difficulty == 'SIMPLE'">
                    AND t.virtual_currency &gt;= #{minVirtualCurrency}
                    AND t.virtual_currency &lt;= #{maxVirtualCurrency}
                </when>
                <when test="difficulty =='NORMAL'">
                    AND t.virtual_currency &gt;= #{minVirtualCurrency}
                    AND t.virtual_currency &lt;= #{maxVirtualCurrency}
                </when>
                <when test="difficulty =='DIFFICULT'">
                    AND t.virtual_currency &gt; #{maxVirtualCurrency}
                </when>
            </choose>
        </if>
        <if test="minLat != null and maxLat != null and minLng!=null and maxLng != null">
            AND a.latitude &gt;= #{minLat} AND a.latitude &lt;= #{maxLat}
            AND a.longitude &gt;= #{minLng} AND a.longitude &lt;= #{maxLng}
        </if>
    </sql>

    <!--任务resultMap-->
    <resultMap type="io.renren.modules.app.dto.TaskDto" id="taskMap">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="startTime" column="start_time"/>
        <result property="expireTime" column="expire_time"/>
        <result property="createTime" column="create_time"/>
        <result property="virtualCurrency" column="virtual_currency"/>
        <result property="status" column="status"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <!--关联地址-->
        <association property="address" javaType="io.renren.modules.app.entity.task.TaskAddressEntity">
            <id property="id" column="address_id"/>
            <result property="province" column="address_province"/>
            <result property="city" column="address_city"/>
            <result property="district" column="address_district"/>
            <result property="street" column="address_street"/>
            <result property="detail" column="address_detail"/>
        </association>
        <!--关联创建人-->
        <association property="creator" javaType="io.renren.modules.app.entity.setting.Member">
            <id property="id" column="creator_id"/>
            <result property="nickName" column="creator_nick_name"/>
            <result property="realName" column="creator_real_name"/>
            <result property="avatar" column="creator_avatar"/>
            <result property="sex" column="creator_sex"/>
        </association>
        <!--关联领取人-->
        <association property="receiver" javaType="io.renren.modules.app.entity.setting.Member">
            <id property="id" column="receiver_id"/>
            <result property="nickName" column="receiver_nick_name"/>
            <result property="realName" column="receiver_real_name"/>
            <result property="avatar" column="receiver_avatar"/>
            <result property="sex" column="receiver_sex"/>
            <result property="mobile" column="receiver_mobile"/>
        </association>
        <!--图片url列表-->
        <collection property="imageUrls" ofType="string">
            <constructor>
                <arg column="image_url"/>
            </constructor>
        </collection>
        <!--标签名称列表-->
        <collection property="tagNames" ofType="string">
            <constructor>
                <arg column="tag_name"/>
            </constructor>
        </collection>
    </resultMap>

    <!--searchTaskMap-->
    <resultMap type="io.renren.modules.app.dto.TaskDto" id="searchTaskMap">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="startTime" column="start_time"/>
        <result property="expireTime" column="expire_time"/>
        <result property="createTime" column="create_time"/>
        <result property="virtualCurrency" column="virtual_currency"/>
        <result property="status" column="status"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <!--关联地址-->
        <association property="address" javaType="io.renren.modules.app.entity.task.TaskAddressEntity">
            <id property="id" column="address_id"/>
            <result property="province" column="address_province"/>
            <result property="city" column="address_city"/>
            <result property="district" column="address_district"/>
            <result property="street" column="address_street"/>
            <result property="detail" column="address_detail"/>
        </association>
        <!--关联创建人-->
        <association property="creator" javaType="io.renren.modules.app.entity.setting.Member">
            <id property="id" column="creator_id"/>
            <result property="nickName" column="creator_nick_name"/>
            <result property="realName" column="creator_real_name"/>
            <result property="avatar" column="creator_avatar"/>
            <result property="sex" column="creator_sex"/>
        </association>
        <!--图片url列表-->
        <collection property="imageUrls" ofType="string">
            <constructor>
                <arg column="image_url"/>
            </constructor>
        </collection>
        <!--标签名称列表-->
        <collection property="tagNames" ofType="string">
            <constructor>
                <arg column="tag_name"/>
            </constructor>
        </collection>
    </resultMap>

    <!--查询任务详情-->
    <select id="getTask" resultMap="taskMap">
        SELECT
        <include refid="taskDtoField"/>,
        r.id AS receiver_id,
        r.receiver_nick_name,
        r.receiver_real_name,
        r.avatar AS receiver_avatar,
        r.sex AS receiver_sex,
        r.mobile AS receiver_mobile
        FROM t_task t
        JOIN t_task_address a ON t.address_id = a.id
        JOIN member m ON t.creator_id = m.id
        LEFT JOIN r_task_image ri ON t.id = ri.task_id
        LEFT JOIN r_task_tag rg ON t.id = rg.task_id
        JOIN t_task_tag tg ON rg.tag_id=tg.id
        LEFT JOIN r_task_notified_user ru ON t.id = ru.task_id
        LEFT JOIN t_task_receive tr ON t.id = tr.task_id AND tr.deleted = 0
        LEFT JOIN member r ON tr.receiver_id = r.id
        WHERE t.id = #{taskId}
    </select>

    <select id="getPublishedTasks" resultMap="searchTaskMap">
        SELECT
        <include refid="taskDtoField"/>
        FROM t_task t
        JOIN t_task_address a ON t.address_id = a.id
        JOIN member m ON t.creator_id = m.id
        LEFT JOIN r_task_image ri ON t.id = ri.task_id
        LEFT JOIN r_task_tag rg ON t.id = rg.task_id
        JOIN t_task_tag tg ON rg.tag_id=tg.id
        WHERE t.creator_id = #{publisherId} AND t.deleted = 0
        ORDER BY t.create_time DESC
        LIMIT #{page.offset},#{page.limit}
    </select>

    <select id="publishCount" resultType="int">
        SELECT
            count(*)
        FROM t_task t
        WHERE t.creator_id = #{publisherId} and t.deleted = 0
    </select>

    <!--用户领取的任务列表-->
    <select id="getReceivedTasks" resultMap="searchTaskMap">
        SELECT
        <include refid="taskDtoField"/>
        FROM t_task_receive re
        JOIN t_task t ON t.id = re.task_id AND re.deleted = 0
        JOIN t_task_address a ON t.address_id = a.id
        JOIN member m ON t.creator_id = m.id
        LEFT JOIN r_task_image ri ON t.id = ri.task_id
        LEFT JOIN r_task_tag rg ON t.id = rg.task_id
        JOIN t_task_tag tg ON rg.tag_id=tg.id
        WHERE re.receiver_id = #{receiverId} and t.deleted = 0
        ORDER BY re.create_time desc
        LIMIT #{page.offset},#{page.limit}
    </select>


    <select id="receiveCount" resultType="int">
        SELECT
            count(*)
        FROM t_task t
        JOIN t_task_receive re ON t.id = re.task_id
        WHERE re.receiver_id  = #{receiverId} and t.deleted = 0
    </select>


    <select id="searchTasks" resultMap="searchTaskMap">
        SELECT
        <include refid="taskDtoField"/>
        FROM t_task t
        JOIN t_task_address a ON t.address_id = a.id
        JOIN member m ON t.creator_id = m.id
        LEFT JOIN r_task_image ri ON t.id = ri.task_id
        LEFT JOIN r_task_tag rg ON t.id = rg.task_id
        JOIN t_task_tag tg ON rg.tag_id=tg.id
        WHERE t.deleted = 0 AND t.status = 'published'
        <include refid="searchTaskCondition"/>
        ORDER BY re.create_time desc
        LIMIT #{page.offset},#{page.limit}
    </select>

    <!--获取任务总数-根据查询条件-->
    <select id="count" resultType="int">
        SELECT
       /* count(DISTINCT(t.id))*/
        count(*)
        FROM t_task t
        JOIN t_task_address a ON t.address_id = a.id
        <!--<if test="tagIds != null and tagIds.size() > 0">
            JOIN t_task_tag tag ON t.id = tag.task_id AND tag.id IN
            <foreach collection="tagIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>-->
        WHERE t.deleted = 0
        <include refid="searchTaskCondition"/>

    </select>


    <select id="isSubmitableTask" resultType="boolean">
        SELECT
          COUNT(*)
        FROM t_task t
        JOIN t_task_receive re ON t.id = re.task_id  AND (t.status = 'received' OR t.status='submitted')
        WHERE t.deleted = 0 AND t.id=#{taskId} AND re.receiver_id = #{receiverId}
    </select>

    <select id="isCompletableTask" resultType="boolean">
        SELECT
          COUNT(*)
        FROM t_task t
        JOIN t_task_receive re ON t.id = re.task_id  AND t.status='submitted'
        WHERE t.deleted = 0 AND t.id=#{taskId} AND re.receiver_id = #{receiverId}
    </select>
    
    <insert id="insertTaskImageRelation">
        INSERT INTO r_task_image(task_id,image_url) VALUES
        <foreach collection="imageUrls" item="item" index="index" separator=",">
            (#{taskId}, #{item})
        </foreach>
    </insert>

    <insert id="insertTaskTagRelation">
        INSERT INTO r_task_tag(task_id,tag_id) VALUES
        <foreach collection="tagIds" item="item" index="index" separator=",">
            (#{taskId}, #{item})
        </foreach>
    </insert>

    <insert id="insertTaskNotifiedUserRelation">
        INSERT INTO r_task_notified_user(task_id,user_id) VALUES
        <foreach collection="userIds" item="item" index="index" separator=",">
            (#{taskId}, #{item})
        </foreach>
    </insert>

</mapper>